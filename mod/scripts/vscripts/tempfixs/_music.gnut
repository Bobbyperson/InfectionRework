global function MusicPlay_Init

const float MUSIC_SCORE_EVENT_PERCENTAGE = 0.6
bool hasPlayedMusic = false
//table<string, bool> playedMusic = {}
void function MusicPlay_Init()
{
	AddCallback_OnClientConnected( OnClientConnected )
	AddCallback_GameStateEnter( eGameState.Prematch, OnGamePreparing )
	AddCallback_OnPlayerKilled( OnPlayerKilled )
}

void function OnClientConnected( entity player )
{
	//if( !(player.GetUID() in playedMusic) )
	//	playedMusic[player.GetUID()] <- false
}

void function OnGamePreparing()
{
	if( GetMapName() != "mp_lobby" )
	{
		thread MusicPlayNormal()
	}
}

void function OnPlayerKilled( entity attacker, entity victim, var damageInfo )
{
	MusicPlayScoreEvent()
}

void function MusicPlayScoreEvent()
{
	if( hasPlayedMusic )
		return
	
	int score = GameMode_GetScoreLimit( GameRules_GetGameMode() )

	if( !IsFFAGame() )
	{
		if( GameRules_GetTeamScore( TEAM_MILITIA ) >= score * MUSIC_SCORE_EVENT_PERCENTAGE || GameRules_GetTeamScore( TEAM_IMC ) >= score * MUSIC_SCORE_EVENT_PERCENTAGE )
		{
			PlayMusicToAll( eMusicPieceID.GAMEMODE_1 )
			hasPlayedMusic = true
		}
	}
	else
	{
		entity bestplayer = GetWinningPlayer()
		if( GameRules_GetTeamScore( bestplayer.GetTeam() ) >= score * MUSIC_SCORE_EVENT_PERCENTAGE )
		{
			PlayMusicToAll( eMusicPieceID.GAMEMODE_1 )
			hasPlayedMusic = true
		}
	}
}

void function MusicPlayNormal()	
{
	if( !IsRoundBased() )
		thread MusicPlayThink()
}

void function MusicPlayThink()
{
	int time = GameTime_TimeLimitSeconds()
	if( time >= 720 )
	{
		wait time*0.6+15
		if( !hasPlayedMusic )
		{
			PlayMusicToAll( eMusicPieceID.GAMEMODE_1 )
			hasPlayedMusic = true
		}

		wait time*0.4-60
		PlayMusicToAll( eMusicPieceID.LEVEL_LAST_MINUTE )
	}
	else if( time >= 600 )
	{
		wait time*0.5+15
		if( !hasPlayedMusic )
		{
			PlayMusicToAll( eMusicPieceID.GAMEMODE_1 )
			hasPlayedMusic = true
		}

		wait time*0.5-60
		PlayMusicToAll( eMusicPieceID.LEVEL_LAST_MINUTE )
	}
	else if( time >= 120 )
	{
		wait time-45
		if( !hasPlayedMusic )
		{
			PlayMusicToAll( eMusicPieceID.GAMEMODE_1 )
			hasPlayedMusic = true
		}
	}
	else
		return
}

entity function GetWinningPlayer() 
{
	entity bestplayer

	foreach ( entity player in GetPlayerArray() )
	{
		if( bestplayer == null )
			bestplayer = player
		
		if( GameRules_GetTeamScore( player.GetTeam() ) > GameRules_GetTeamScore( bestplayer.GetTeam() ) )
			bestplayer = player
	}

	return bestplayer
}

/* ClientCommand() based music play, ignored now
void function MusicPlayScoreEvent()
{
	int score = GameMode_GetScoreLimit( GameRules_GetGameMode() )

	if( !IsFFAGame() )
	{
		if( GameRules_GetTeamScore( TEAM_MILITIA ) >= score * 0.6 || GameRules_GetTeamScore( TEAM_IMC ) >= score * 0.6 )
		{
			array<entity> players = GetPlayerArray()
			foreach( entity player in players )
			{
				if( !playedMusic[player.GetUID()] )
				{
					ClientCommand( player, "script_client PlayMusic(eMusicPieceID.GAMEMODE_1)" )
					playedMusic[player.GetUID()] = true
				}
			}
		}
	}
	else
	{
		entity bestplayer = GetWinningPlayer()
		if( GameRules_GetTeamScore( bestplayer.GetTeam() ) >= score )
		{
			array<entity> players = GetPlayerArray()
			foreach( entity player in players )
			{
				if( !playedMusic[player.GetUID()] )
				{
					ClientCommand( player, "script_client PlayMusic(eMusicPieceID.GAMEMODE_1)" )
					playedMusic[player.GetUID()] = true
				}
			}
		}
	}
}

void function MusicPlayNormal()	
{
	thread MusicPlayThink()
}

void function MusicPlayThink()
{
	int time = GameTime_TimeLimitSeconds()
	if( time >= 720 )
	{
		wait time*0.6+15
		foreach( entity player in GetPlayerArray() )
		{
			if( !playedMusic[player.GetUID()] )
			{
				ClientCommand( player, "script_client PlayMusic(eMusicPieceID.GAMEMODE_1)" )
				playedMusic[player.GetUID()] = true
			}
		}

		wait time*0.4-60
		foreach( entity player in GetPlayerArray() )
		{
			ClientCommand( player, "script_client PlayMusic(eMusicPieceID.LEVEL_LAST_MINUTE)" )
		}
	}
	else if( time >= 600 )
	{
		wait time*0.5+15
		foreach( entity player in GetPlayerArray() )
		{
			if( !playedMusic[player.GetUID()] )
			{
				ClientCommand( player, "script_client PlayMusic(eMusicPieceID.GAMEMODE_1)" )
				playedMusic[player.GetUID()] = true
			}
		}

		wait time*0.5-60
		foreach( entity player in GetPlayerArray() )
		{
			ClientCommand( player, "script_client PlayMusic(eMusicPieceID.LEVEL_LAST_MINUTE)" )
		}
	}
	else if( time >= 120 )
	{
		wait time-45
		foreach( entity player in GetPlayerArray() )
		{
			ClientCommand( player, "script_client PlayMusic(eMusicPieceID.LEVEL_LAST_MINUTE)" )
		}
	}
	else
		return
}

entity function GetWinningPlayer() 
{
	entity bestplayer

	foreach ( entity player in GetPlayerArray() )
	{
		if( bestplayer == null )
			bestplayer = player
		
		if( GameRules_GetTeamScore( player.GetTeam() ) > GameRules_GetTeamScore( bestplayer.GetTeam() ) )
			bestplayer = player
	}

	return bestplayer
}
*/